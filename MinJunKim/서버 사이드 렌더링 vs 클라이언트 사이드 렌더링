1.csr과 ssr이란 무엇이며 각각의 특징들과 차이점은 무엇이 있나요?
페이지를 렌더링해서 유저들에게 보여줄 때, 렌더링을 클라이언트에서 하는지, 서버에서 하는지에 따라 CSR 과 SSR로 나뉜다. 
￼
CSR은 첫 로딩시 html이 빈화면이며, javascript 파일들까지 다운 받아져야 클라이언트에서 렌더가 완료되어 한번에 보여주게 되고, SSR은 기본적인 html이 먼저 렌더링이 준비되어있기에 html로 기본이라도 보여주고서 차차 페이지가 완료되어가며 보인다. CSR과 SSR은  첫 로딩 시의 사용자 경험, 모두 로드된 후의 ux, seo 가능 여부에서 차이가 있다. 

- 첫 로딩 시점에서 사용자 입장에서는 무언가라도 보이고 있는 SSR 방식이 페이지 이탈이 방지되지만, 모든 정보가 제공되지 않은 상태에서 잘 못된 선택을 할 수도 있기에 그것을 방지하지 못하는 점은 좋은 ux는 아니다. 
- 로드가 모두 완료된 상태를 비교하면, SSR에서는 새로고침이나 다른 요청이 이루어지면 렌더를 위한 그 요청이 서버에 잦아서 서버 부하가 많아지며 새로 고침이나 페이지 이동이 일어나면 깜빡임이 잦은 단점이 있다. 반면 CSR은 한번에 다 다운된 상태이기에 페이지 깜빡이 없고 빠른 페이지 이동이 가능하며, 추가적인 data 요청이 있으면 그 요청만 처리하기에 서버에 대한 요청이 적어서 ux에서는 CSR이 더 좋은 면이 있다.
- SEO 가 요즘 매우 중요한데, 구글의 검색 엔진을 제외하면 CSR의 경우 SEO가 거의 불가능하고 SSR 방식은 SEO가 유용하다.
- 렌더 완료까지는 CSR이 빠르기도 하지만, 첫 로드가 SSR이 빨라서 사용자 입장에서 평균으로 치면 SSR이 보통 더 빠르다.

2.요즘 언제 어떤 방식을 사용하는가?
- 첫 페이지는 SSR 방식으로 하여 SEO 를 향상 시키고 유저 방지를 이탈하게 하고서, 그 후의 페이지들은 CSR로 더 매끄러운 사용자 경험이 일어나게 하기도 한다.
- 실시간으로 data 업데이트나 페이지가 잦게 렌더링되면 좋은 경우는 SSR이 적합하기도 하며, 웹싸이트가 클 경우 CSR로 진행하면 첫 로딩까지 매우 오래 걸리기에 큰 싸이트를 CSR 로만 진행하면 단점이 커진다.

3.다른 방식이나 더 알면 좋은거는?
- SSR, CSR 외에 사용하기도 하는건 SSG (Static Site Generation), ISR(Incremental Static Regeneration) 방식도 있다.
- SSG는 정적으로 만드는 방식인데, 페이지에 정보 업데이트가 필요하지 않으면 (단순 블로그의 아티클 있듯) SSG로 만들면 더 빠른 로드가 가능하다.
- ISR은 SSG가 업데이트 될 수 있도록 성능을 더 향상 시킨 방법이다. 시간 설정을 하여 정해진 시간마다 업데이트된 정보로 페이지를 만들어두는 상태. 댓글을 블로그에 등록할 경우 1분마다 블로그의 댓글이 업데이트되어서 로드되게 하는 것과 같은 방식.
- hydration : SSR시 서버에서 pre-rendering 된 순수 html(인터랙션 불가)에 필요했던 요소들을 추후에 매칭해서 한번 더 렌더된다.

4.FE에서 사용 방식은?
- React, Next.js 에서 CSR,SSR로 모두 구현은 가능. 그러나 React는 CSR 베이스, Next.js는 SSR 베이스로 보기도함. Next.js는 React의 프레임워크. React에서 SSR 구현하는건 공부가 필요하고, Next.js로 SSR 구현하는건 비교적 쉽다고 생각. 

5.관련된 오류 경험은?
- Next.JS로 개발하면 기본적으로 SSR인 방식이 되는데, hydration 오류 발생하였음. LocalStorage에서 로그인 정보로 Topbar에 유저사진이 뜰지, login 버튼이 뜰지 정해지는데, SSR 방식으로는 localStorage 사용 불가하고 CSR 방식이어야 했다. 그래서 Topbar의 html이 pre-render 후 localStorage CSR로 충돌하게 되기에, Topbar 의 pre-render 될 html 내용들도 CSR로 되도록 설정하였음.


Next.js (SSR) 로 만든 싸이트들? : https://nextjs.org/showcase
React (CSR) 로 만든 싸이트들? : https://medium.com/@coderacademy/32-sites-built-with-reactjs-172e3a4bed81

레퍼런스, 참고할 내용들

https://velog.io/@vagabondms/기술-스터디-SSR과-CSR의-차이

https://velog.io/@namezin/CSR-SSR

https://cpro95.tistory.com/492

https://manon-kim.tistory.com/m/entry/NextJS-Pre-rendering?category=1088969

https://codeburst.io/next-js-ssr-vs-create-react-app-csr-7452f71599f6       걸리는 시간 비교 영문

https://helloinyong.tistory.com/315     hydration 설명
